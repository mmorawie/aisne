#include <QApplication>
#include <QPushButton>

#include <QObject>
#include <QWidget>
#include <QGLWidget>
#include <QtGui>
#include <QtOpenGL> 
#include <QTimer>


#include <iostream>
#include <time.h>
#include <sys/time.h>

#include <string>
#include <cmath>
using namespace std;


#include <GL/gl.h>
#include <GL/glu.h>

#define TEST
#define PML

#include "GLComponents/Font.h"
#include "GLComponents/Panel.h"

#include "Fdtd.h"
#include "Source.h"


class Form1: public QWidget {
	Q_OBJECT
	
	private:
		
		Panel * main;
		Fdtd * fdtd;
		Source * source;
		Source * source2;
		Source * source3;
		
		
	public: 
		Form1(): QWidget() {
			
			Font * f = new Font("res/monospaced/DroidSansMono.ttf", 12, Font::createRGBA(0,0,0,255), this);
			
			fdtd = new Fdtd(782/2,416/2);
			
			source = new GaussianBeam( (Fdtd::point){30, 100}, 20, 100, 30, fdtd); 
			
			
			main = new Panel(this, f, fdtd);
			
			QTimer * timer = new QTimer(this);
			connect(timer, SIGNAL(timeout()), this, SLOT(run()));
			
			#ifndef PML
				timer->setInterval(20);
			#else
				timer->setInterval(500);
			#endif
			timer->start();
				
		};
		
	
  private slots:
	void run(){
				if (fdtd->t < 900) source->inject();
				fdtd->algorithmstep();
				main->update();
	};
   
  
};

#include "autogenerated/moc.cpp"


int main(int argc, char * argv[]) {
  QApplication app(argc, argv);

  Form1 form1;
  
  form1.show();

  return app.exec();

}
